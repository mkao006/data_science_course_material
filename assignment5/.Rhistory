local
r
dir()
str(seaflow.df)
summary(seaflow.df)
head(seaflow.df)
table(seaflow.df$pop)
summary(seaflow.df)
createDataPartition
createDataPartition
?createDataPartition
?createDataPartition
data(oil)
head(oil)
oil
head(oilType)
str(oilType)
dim(seaflow.df)
str(test)
str(train)
train
str(train)
rm(train)
train
print(model)
plot(model)
?rpart
model
args(rpart)
model
model
model
model
model
model
str(tmp)
head(tmp)
test.df[1, ]
sum(tmp[1, ])
?tapply
head(presidents)
str(tmp)
head(test.df)
str(training.df)
training.df$pop = factor(training.df$pop)
str(forest.fit)
str(check0
str(check)
str(test.df)
importance(forest.fit)
head(test.df)
test.df$prediction = NULL
head(test.df)
summary(test.df)
)
unique(seaflow.df$fsc_big)
0.9207376 - 0.9194106
colnames(seaflow.df)
test.df
head(test.df)
source("assignment4.R")
source("assignment4.R")
source("assignment4.R")
str(test.df)
str(test.df)
getOption("stringsAsFactors")
source("assignment4.R")
dev.new()
test.df[test.df$svmPrediction != svmCleanPrediction, ]
test.df[test.df$svmPrediction != svmCleanPrediction, ]
test.df[test.df$svmPrediction != svmCleanPrediction, ]
test.df[test.df$svmPrediction != test.df$svmCleanPrediction, ]
test.df[test.df$svmPrediction != test.df$svmCleanPrediction, c("svmPrediction", "svmCleanPrediction")]
dim(test.df[test.df$svmPrediction != test.df$svmCleanPrediction, c("svmPrediction", "svmCleanPrediction")])
dim(test.df)
603/36171
dim(cleanTest.df)
dim(cleanSeaflow.df)
dim(seaflow.df)
str(cleanTest.df)
dim(cleanTest.df)
dim(cleanTest.df)
